name: Auto Deploy n8n

on:
  push:
    branches: [ develop ]
    paths:
      - 'docker-compose.yml'
      - 'docker-compose.override.yml'
      - 'cloudflared-config/**'
  workflow_dispatch:
    # Cho ph√©p k√≠ch ho·∫°t th·ªß c√¥ng

jobs:
  deploy:
    runs-on: self-hosted  # Ch·ªâ ƒë·ªãnh s·ª≠ d·ª•ng self-hosted runner thay v√¨ ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy n8n
        run: |
          echo "Deploying n8n..."
          
          # Th·ª±c hi·ªán pull v√† restart
          echo "Running docker-compose commands..."
          echo "Running docker-compose down:"
          docker-compose down
          echo "Down exit code: $?"
          echo "Running docker-compose pull:"
          docker-compose pull
          echo "Pull exit code: $?"
          echo "Running docker-compose up -d:"
          docker-compose --env-file ./.env -f docker-compose.yml -f docker-compose.override.yml up -d
          echo "Up exit code: $?"
          
      # G·ª≠i th√¥ng b√°o Telegram (n·∫øu c·∫ßn)
      - name: Send notification
        if: success()
        run: |
          if [[ ! -z "${{ secrets.TELEGRAM_BOT_TOKEN }}" && ! -z "${{ secrets.TELEGRAM_CHAT_ID }}" ]]; then
            curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
              -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
              -d text="üöÄ Deployed n8n successfully!" \
              -d parse_mode=Markdown
          fi