name: Auto Deploy n8n

on:
  push:
    branches: 
      - master
      - staging
      - develop
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging
          - development

jobs:
  deploy:
    runs-on: self-hosted
    environment: ${{ github.ref == 'refs/heads/master' && 'production' || github.ref == 'refs/heads/staging' && 'staging' || 'development' }}
    steps:
      - name: Clean runner temp env files
        run: |
          # Xác định môi trường
          if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            ENV_SUFFIX="prod"
            ENV_DIR="n8n-prod"
          elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            ENV_SUFFIX="staging"
            ENV_DIR="n8n-staging"
          else
            ENV_SUFFIX="dev"
            ENV_DIR="n8n-dev"
          fi
          
          # Tạo và xóa thư mục tạm cho môi trường cụ thể
          ENV_TEMP_DIR="$RUNNER_WORKSPACE/_temp_$ENV_SUFFIX"
          rm -rf "$ENV_TEMP_DIR"
          mkdir -p "$ENV_TEMP_DIR"
          echo "✅ Đã chuẩn bị thư mục tạm cho môi trường $ENV_SUFFIX"

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          path: ${{ github.ref == 'refs/heads/master' && 'n8n-prod' || github.ref == 'refs/heads/staging' && 'n8n-staging' || 'n8n-dev' }}

      - name: Prepare n8n directories
        run: |
          # Xác định môi trường và đường dẫn
          if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            ENV_SUFFIX="prod"
            WORKSPACE_DIR="n8n-prod"
            N8N_DATA_DIR="n8n_data"
          elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            ENV_SUFFIX="staging"
            WORKSPACE_DIR="n8n-staging"
            N8N_DATA_DIR="n8n_data_staging"
          else
            ENV_SUFFIX="dev"
            WORKSPACE_DIR="n8n-dev"
            N8N_DATA_DIR="n8n_data_dev"
          fi
          
          # Tạo thư mục n8n_data và ssh cho môi trường cụ thể
          mkdir -p "$WORKSPACE_DIR/$N8N_DATA_DIR"
          mkdir -p "$WORKSPACE_DIR/ssh"
          echo "✅ Đã chuẩn bị thư mục cho môi trường $ENV_SUFFIX"

      - name: Create .env file from secrets
        run: |
          # Xác định môi trường và đường dẫn
          if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            ENV_SUFFIX="prod"
            WORKSPACE_DIR="n8n-prod"
            ENV_FILE="$WORKSPACE_DIR/.env"
          elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            ENV_SUFFIX="staging"
            WORKSPACE_DIR="n8n-staging"
            ENV_FILE="$WORKSPACE_DIR/.env"
          else
            ENV_SUFFIX="dev"
            WORKSPACE_DIR="n8n-dev"
            ENV_FILE="$WORKSPACE_DIR/.env"
          fi
          
          echo "Creating .env file for $ENV_SUFFIX environment..."
          
          # Tạo file .env từ GitHub Secrets và Variables
          cat > "$ENV_FILE" << EOF
          # PostgreSQL
          POSTGRES_USER=${{ secrets.POSTGRES_USER || 'n8n' }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB || 'n8n_database' }}
          
          # n8n
          N8N_BASIC_AUTH_USER=${{ secrets.N8N_BASIC_AUTH_USER || 'admin' }}
          N8N_BASIC_AUTH_PASSWORD=${{ secrets.N8N_BASIC_AUTH_PASSWORD }}
          N8N_ENCRYPTION_KEY=${{ secrets.N8N_ENCRYPTION_KEY }}
          DB_POSTGRESDB_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          WEBHOOK_URL=${{ vars.WEBHOOK_URL }}
          
          # Timezone & other settings
          GENERIC_TIMEZONE=${{ secrets.GENERIC_TIMEZONE || 'Asia/Ho_Chi_Minh' }}
          TZ=${{ secrets.TZ || 'Asia/Ho_Chi_Minh' }}
          N8N_DEFAULT_BINARY_DATA_MODE=${{ secrets.N8N_DEFAULT_BINARY_DATA_MODE || 'filesystem' }}
          EXECUTIONS_DATA_PRUNE=${{ secrets.EXECUTIONS_DATA_PRUNE || 'true' }}
          EXECUTIONS_DATA_MAX_AGE=${{ secrets.EXECUTIONS_DATA_MAX_AGE || '720' }}
          EXECUTIONS_DATA_PRUNE_MAX_COUNT=${{ secrets.EXECUTIONS_DATA_PRUNE_MAX_COUNT || '50000' }}
          
          # Environment specific
          ENVIRONMENT=$ENV_SUFFIX
          EOF
          
          echo "✅ .env file created successfully for $ENV_SUFFIX environment"

      - name: Build Excel API image
        run: |
          # Xác định môi trường và đường dẫn
          if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            WORKSPACE_DIR="n8n-prod"
          elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            WORKSPACE_DIR="n8n-staging"
          else
            WORKSPACE_DIR="n8n-dev"
          fi
          
          echo "🔨 Building Excel API image..."
          
          # Di chuyển vào thư mục chứa source code Excel API
          cd "$WORKSPACE_DIR/src/ExcelApi"
          
          # Build image
          docker build -t pfm-excel-api:latest .
          
          echo "✅ Excel API image built successfully"

      - name: Prepare deployment script
        run: |
          # Xác định môi trường và đường dẫn
          if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            ENV_SUFFIX="prod"
            WORKSPACE_DIR="n8n-prod"
          elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            ENV_SUFFIX="staging"
            WORKSPACE_DIR="n8n-staging"
          else
            ENV_SUFFIX="dev"
            WORKSPACE_DIR="n8n-dev"
          fi
          
          # Cấp quyền thực thi cho script triển khai
          chmod +x "$WORKSPACE_DIR/deploy-n8n.$ENV_SUFFIX.sh"
          echo "✅ Deployment script is ready for $ENV_SUFFIX environment"

      - name: Deploy n8n using script
        run: |
          # Xác định môi trường và đường dẫn
          if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            ENV_SUFFIX="prod"
            WORKSPACE_DIR="n8n-prod"
          elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            ENV_SUFFIX="staging"
            WORKSPACE_DIR="n8n-staging"
          else
            ENV_SUFFIX="dev"
            WORKSPACE_DIR="n8n-dev"
          fi
          
          echo "🚀 Deploying n8n using deployment script for $ENV_SUFFIX environment..."
          
          # Di chuyển vào thư mục workspace
          cd "$WORKSPACE_DIR"
          
          # Dừng container hiện tại (nếu có) - không xóa volumes
          docker-compose down
          
          # Pull PostgreSQL image trước
          echo "📥 Pulling PostgreSQL image..."
          docker pull postgres:15
          
          # Chạy script triển khai
          ./deploy-n8n.$ENV_SUFFIX.sh
          
      - name: Send notification
        if: always()
        run: |
          if [[ ! -z "${{ secrets.TELEGRAM_BOT_TOKEN }}" && ! -z "${{ secrets.TELEGRAM_CHAT_ID }}" ]]; then
            # Xác định môi trường
            if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
              ENV_SUFFIX="prod"
            elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
              ENV_SUFFIX="staging"
            else
              ENV_SUFFIX="dev"
            fi
            
            # Tạo link đến GitHub Action run hiện tại
            ACTION_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            
            # Kiểm tra trạng thái của job
            if [ "${{ job.status }}" == "success" ]; then
              STATUS_EMOJI="✅"
              STATUS_TEXT="Deployed n8n to $ENV_SUFFIX environment successfully!"
            else
              STATUS_EMOJI="❌"
              STATUS_TEXT="Deployment n8n to $ENV_SUFFIX environment failed!"
            fi
            
            # Gửi thông báo tới Telegram
            curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
              -H "Content-Type: application/json" \
              -d '{
                "chat_id": "${{ secrets.TELEGRAM_CHAT_ID }}",
                "text": "'"$STATUS_EMOJI"' *'"$STATUS_TEXT"'*\n [View Deployment Details]('"$ACTION_URL"')",
                "parse_mode": "Markdown"
              }'
          fi