name: Daily n8n Backup (Production Only)

on:
  workflow_dispatch:
    # Cho ph√©p k√≠ch ho·∫°t th·ªß c√¥ng
  # schedule:
  #   - cron: '15 0 * * *' # 7h15 s√°ng gi·ªù Vi·ªát Nam (UTC+7)

jobs:
  backup:
    if: ${{ github.ref_name == 'master' }}
    runs-on: self-hosted
    # ƒê·∫∑t th·ªùi gian timeout cho to√†n b·ªô job n√†y l√† 30 ph√∫t
    timeout-minutes: 30 
    name: Daily n8n Backup (Production Only)
    steps:
      # B·ªè b∆∞·ªõc checkout code, s·ª≠ d·ª•ng lu√¥n th∆∞ m·ª•c deploy production
      - name: Thi·∫øt l·∫≠p bi·∫øn th∆∞ m·ª•c deploy production
        run: echo "DEPLOY_DIR=deploy_${GITHUB_REF_NAME}" >> $GITHUB_ENV

      - name: Ki·ªÉm tra file .env v√† script backup-n8n.sh
        run: |
          cd $DEPLOY_DIR
          if [ ! -f .env ]; then
            echo "‚ùå Kh√¥ng t√¨m th·∫•y file .env trong $DEPLOY_DIR"; exit 1;
          fi
          if [ ! -f backup-n8n.sh ]; then
            echo "‚ùå Kh√¥ng t√¨m th·∫•y script backup-n8n.sh trong $DEPLOY_DIR"; exit 1;
          fi

      - name: Th·ª±c thi backup
        run: |
          cd $DEPLOY_DIR
          echo "üîí ƒêang backup d·ªØ li·ªáu n8n cho m√¥i tr∆∞·ªùng production..."
          bash ./backup-n8n.sh
          echo "‚úÖ ƒê√£ backup d·ªØ li·ªáu n8n th√†nh c√¥ng"

      - name: G·ª≠i th√¥ng b√°o l·ªói backup l√™n Telegram
        if: failure()
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          MESSAGE="‚ùå Backup n8n th·∫•t b·∫°i tr√™n branch $GITHUB_REF_NAME l√∫c $(date '+%Y-%m-%d %H:%M:%S')"
          curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
            -d chat_id="${TELEGRAM_CHAT_ID}" \
            -d text="$MESSAGE" 