#!/bin/bash
# deploy-n8n.sh - Script tri·ªÉn khai n8n v·ªõi kh·∫£ nƒÉng x·ª≠ l√Ω l·ªói n√¢ng cao
# Phi√™n b·∫£n c·∫£i ti·∫øn: Gi·ªØ nguy√™n d·ªØ li·ªáu, ch·ªâ s·ª≠a file config n·∫øu c·∫ßn

# Hi·ªÉn th·ªã banner
echo "=============================================="
echo "           TRI·ªÇN KHAI N8N SERVER             "
echo "=============================================="

# Ghi log v·ªõi timestamp
log() {
  echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

# X·ª≠ l√Ω l·ªói
handle_error() {
  log "‚ùå L·ªói: $1"
  exit 1
}

# 1. Chu·∫©n b·ªã m√¥i tr∆∞·ªùng
log "üßπ ƒêang chu·∫©n b·ªã m√¥i tr∆∞·ªùng..."

# T·∫°o th∆∞ m·ª•c n8n_data tr∆∞·ªõc n·∫øu ch∆∞a t·ªìn t·∫°i
if [ ! -d "./n8n_data" ]; then
  mkdir -p ./n8n_data
  log "‚úÖ ƒê√£ t·∫°o th∆∞ m·ª•c n8n_data"
fi

# Sao l∆∞u file config hi·ªán t·∫°i n·∫øu c√≥
if [ -f "./n8n_data/config" ]; then
  log "üì¶ Sao l∆∞u file config hi·ªán t·∫°i..."
  cp "./n8n_data/config" "./n8n_data/config.bak"
  log "‚úÖ ƒê√£ sao l∆∞u file config"
fi

# Ki·ªÉm tra file config hi·ªán t·∫°i xem c√≥ ch·ª©a ch√∫ th√≠ch kh√¥ng mong mu·ªën kh√¥ng
CONFIG_ISSUE=false
if [ -f "./n8n_data/config" ]; then
  if grep -q "# <<<=== THAY B·∫∞NG KH√ìA M·∫†NH C·ª¶A B·∫†N" "./n8n_data/config"; then
    log "‚ö†Ô∏è Ph√°t hi·ªán ch√∫ th√≠ch kh√¥ng mong mu·ªën trong file config hi·ªán t·∫°i"
    CONFIG_ISSUE=true
  fi
fi

# CH·ªà t·∫°o file config m·ªõi n·∫øu kh√¥ng t·ªìn t·∫°i ho·∫∑c c√≥ v·∫•n ƒë·ªÅ
if [ ! -f "./n8n_data/config" ] || [ "$CONFIG_ISSUE" = true ]; then
  if [ -f ".env" ]; then
    CLEAN_KEY=$(grep "N8N_ENCRYPTION_KEY" .env | cut -d '=' -f2 | xargs)
    if [ ! -z "$CLEAN_KEY" ]; then
      log "üìù T·∫°o file config v·ªõi encryptionKey t·ª´ .env..."
      echo "{\"encryptionKey\": \"$CLEAN_KEY\"}" > ./n8n_data/config
      log "‚úÖ ƒê√£ t·∫°o file config m·ªõi"
    else
      log "‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y N8N_ENCRYPTION_KEY trong file .env"
    fi
  else
    log "‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y file .env"
  fi
else
  log "‚úÖ File config hi·ªán t·∫°i kh√¥ng c√≥ v·∫•n ƒë·ªÅ, gi·ªØ nguy√™n"
fi

# 2. Pull images m·ªõi nh·∫•t cho c√°c d·ªãch v·ª• kh√°c
log "üîÑ ƒêang pull images m·ªõi nh·∫•t..."
docker-compose pull || handle_error "Kh√¥ng th·ªÉ pull images"
log "‚úÖ ƒê√£ pull images th√†nh c√¥ng"

# 3. Build images for all services defined in docker-compose.yml
log "üî® ƒêang build images cho t·∫•t c·∫£ c√°c d·ªãch v·ª•..."
docker-compose build || handle_error "Kh√¥ng th·ªÉ build images"
log "‚úÖ ƒê√£ build images th√†nh c√¥ng"

# 4. D·ª´ng container hi·ªán t·∫°i (n·∫øu c√≥)
log "‚èπÔ∏è D·ª´ng containers hi·ªán t·∫°i..."
docker-compose down || true
log "‚úÖ ƒê√£ d·ª´ng c√°c containers hi·ªán t·∫°i"

# 5. GI·ªÆ NGUY√äN VOLUMES - Kh√¥ng x√≥a volumes n·ªØa
log "‚úÖ Gi·ªØ nguy√™n d·ªØ li·ªáu n8n hi·ªán c√≥"

# 6. Kh·ªüi ƒë·ªông container
log "üöÄ ƒêang kh·ªüi ƒë·ªông containers..."
docker-compose -f docker-compose.yml -f docker-compose.override.yml up -d || handle_error "Kh√¥ng th·ªÉ kh·ªüi ƒë·ªông containers"
log "‚úÖ ƒê√£ kh·ªüi ƒë·ªông containers th√†nh c√¥ng"

# 7. ƒê·ª£i n8n kh·ªüi ƒë·ªông
log "‚è≥ ƒêang ƒë·ª£i n8n kh·ªüi ƒë·ªông..."
sleep 15
log "‚úÖ ƒê√£ ƒë·ª£i ƒë·ªß th·ªùi gian cho n8n kh·ªüi ƒë·ªông"

# 8. Ki·ªÉm tra tr·∫°ng th√°i container
log "üîç Ki·ªÉm tra tr·∫°ng th√°i container n8n..."
if ! docker ps | grep -q "n8n_main"; then
  log "‚ö†Ô∏è Container n8n_main kh√¥ng ƒëang ch·∫°y, ki·ªÉm tra logs..."
  docker logs n8n_main --tail 50
  handle_error "Container n8n_main kh√¥ng kh·ªüi ƒë·ªông ƒë∆∞·ª£c"
fi
log "‚úÖ Container n8n_main ƒëang ch·∫°y"

# 9. Ki·ªÉm tra file config
log "üîç Ki·ªÉm tra file config c·ªßa n8n..."
CONFIG_CONTENT=$(docker exec n8n_main cat /home/node/.n8n/config 2>/dev/null)
if [ $? -ne 0 ]; then
  log "‚ö†Ô∏è Kh√¥ng th·ªÉ ƒë·ªçc file config, c√≥ th·ªÉ file ch∆∞a ƒë∆∞·ª£c t·∫°o"
else
  echo "$CONFIG_CONTENT"
  log "‚úÖ ƒê√£ ƒë·ªçc file config th√†nh c√¥ng"
fi

# 9. Ki·ªÉm tra ch√∫ th√≠ch kh√¥ng mong mu·ªën trong file config
log "üîç Ki·ªÉm tra ch√∫ th√≠ch kh√¥ng mong mu·ªën trong file config..."
if echo "$CONFIG_CONTENT" | grep -q "# <<<=== THAY B·∫∞NG KH√ìA M·∫†NH C·ª¶A B·∫†N"; then
  log "‚ö†Ô∏è T√¨m th·∫•y ch√∫ th√≠ch kh√¥ng mong mu·ªën trong file config"
  log "üîß ƒêang s·ª≠a file config..."
  
  # L·∫•y gi√° tr·ªã N8N_ENCRYPTION_KEY t·ª´ file .env
  CLEAN_KEY=$(grep "N8N_ENCRYPTION_KEY" .env | cut -d '=' -f2 | xargs)
  
  # Ki·ªÉm tra xem CLEAN_KEY c√≥ gi√° tr·ªã kh√¥ng
  if [ -z "$CLEAN_KEY" ]; then
    handle_error "Kh√¥ng t√¨m th·∫•y gi√° tr·ªã N8N_ENCRYPTION_KEY trong file .env"
  fi
  
  # T·∫°o file config t·∫°m th·ªùi tr√™n m√°y host
  log "üìù T·∫°o file config t·∫°m th·ªùi..."
  echo "{\"encryptionKey\": \"$CLEAN_KEY\"}" > ./n8n_data/config.new
  
  # Sao ch√©p file config v√†o container
  log "üìÇ Sao ch√©p file config v√†o container..."
  docker cp ./n8n_data/config.new n8n_main:/home/node/.n8n/config
  
  # Kh·ªüi ƒë·ªông l·∫°i n8n
  log "üîÑ Kh·ªüi ƒë·ªông l·∫°i n8n ƒë·ªÉ √°p d·ª•ng c·∫•u h√¨nh m·ªõi..."
  docker restart n8n_main
  
  # ƒê·ª£i n8n kh·ªüi ƒë·ªông l·∫°i v·ªõi th·ªùi gian d√†i h∆°n
  log "‚è≥ ƒêang ƒë·ª£i n8n kh·ªüi ƒë·ªông l·∫°i (30 gi√¢y)..."
  sleep 30
  
  # Ki·ªÉm tra tr·∫°ng th√°i container
  if ! docker ps | grep -q "n8n_main"; then
    log "‚ö†Ô∏è Container n8n_main kh√¥ng kh·ªüi ƒë·ªông l·∫°i ƒë∆∞·ª£c, ki·ªÉm tra logs..."
    docker logs n8n_main --tail 50
    handle_error "Container n8n_main kh√¥ng kh·ªüi ƒë·ªông l·∫°i ƒë∆∞·ª£c sau khi s·ª≠a config"
  fi
  
  # Ki·ªÉm tra l·∫°i file config
  log "üîç Ki·ªÉm tra l·∫°i file config sau khi s·ª≠a..."
  NEW_CONFIG_CONTENT=$(docker exec n8n_main cat /home/node/.n8n/config 2>/dev/null)
  if [ $? -ne 0 ]; then
    handle_error "Kh√¥ng th·ªÉ ƒë·ªçc file config sau khi s·ª≠a"
  fi
  echo "$NEW_CONFIG_CONTENT"
  
  # Ki·ªÉm tra l·∫°i ch√∫ th√≠ch
  if echo "$NEW_CONFIG_CONTENT" | grep -q "# <<<=== THAY B·∫∞NG KH√ìA M·∫†NH C·ª¶A B·∫†N"; then
    handle_error "V·∫´n c√≤n ch√∫ th√≠ch kh√¥ng mong mu·ªën trong file config sau khi s·ª≠a"
  else
    log "‚úÖ ƒê√£ s·ª≠a file config th√†nh c√¥ng"
  fi
else
  log "‚úÖ Kh√¥ng t√¨m th·∫•y ch√∫ th√≠ch kh√¥ng mong mu·ªën trong file config"
fi

# 10. Ki·ªÉm tra th∆∞ vi·ªán msoffcrypto-tool
log "üîç Ki·ªÉm tra c√†i ƒë·∫∑t th∆∞ vi·ªán msoffcrypto-tool..."
if docker exec n8n_main bash -c "pip3 list | grep -q msoffcrypto-tool"; then
  MSOFFCRYPTO_VERSION=$(docker exec n8n_main bash -c "pip3 list | grep msoffcrypto-tool" | awk '{print $2}')
  log "‚úÖ Th∆∞ vi·ªán msoffcrypto-tool ƒë√£ ƒë∆∞·ª£c c√†i ƒë·∫∑t (phi√™n b·∫£n $MSOFFCRYPTO_VERSION)"
else
  log "‚ö†Ô∏è Th∆∞ vi·ªán msoffcrypto-tool ch∆∞a ƒë∆∞·ª£c c√†i ƒë·∫∑t ƒë√∫ng c√°ch"
fi

# 11. Ki·ªÉm tra tr·∫°ng th√°i c√°c container
log "üîç Ki·ªÉm tra tr·∫°ng th√°i c√°c container..."
docker-compose ps

# 12. Hi·ªÉn th·ªã URL truy c·∫≠p n8n
log "üåê n8n ƒë√£ ƒë∆∞·ª£c tri·ªÉn khai th√†nh c√¥ng v√† c√≥ th·ªÉ truy c·∫≠p t·∫°i:"
echo "   http://localhost:5678"
if [ ! -z "$WEBHOOK_URL" ]; then
  echo "   ho·∫∑c: $WEBHOOK_URL"
fi

log "‚úÖ TRI·ªÇN KHAI N8N HO√ÄN T·∫§T TH√ÄNH C√îNG"
exit 0