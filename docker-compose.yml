# =============================
# Static IPv4 assignments for services
# Last edited: 2025-08-29
# IP Prefix will be taken from the IP_PREFIX environment variable
# - Gateway: ${IP_PREFIX}.1
# - pfm_excel_api: ${IP_PREFIX}.2
# - postgresdb: ${IP_PREFIX}.3
# - n8n-main: ${IP_PREFIX}.4
# - redis: ${IP_PREFIX}.6
# - n8n-worker: ${IP_PREFIX}.7
# =============================
services:
  redis:
    # Static IP: ${IP_PREFIX}.6
    image: redis:7-alpine
    restart: always
    command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      custom_network:
        ipv4_address: ${IP_PREFIX}.6

  postgresdb:
    # Static IP: ${IP_PREFIX}.3
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_EXTERNAL_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      custom_network:
        ipv4_address: ${IP_PREFIX}.3

  n8n-main:
    # Static IP: ${IP_PREFIX}.4 - Main instance for web UI and scheduling
    image: docker.n8n.io/n8nio/n8n
    restart: always
    ports:
      - "${N8N_EXTERNAL_PORT}:5678"
    networks:
      custom_network:
        ipv4_address: ${IP_PREFIX}.4
    volumes:
      - n8n_data:/home/node/.n8n
      - ./ssh:/home/node/.ssh
    depends_on:
      postgresdb:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - TZ=Asia/Ho_Chi_Minh
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE:-Asia/Ho_Chi_Minh}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      # Database configuration
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgresdb
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      # Redis configuration for main instance
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_PASSWORD=${REDIS_PASSWORD}
      - QUEUE_BULL_REDIS_DB=${REDIS_DB:-0}
      # Main instance configuration
      - EXECUTIONS_MODE=queue
      - N8N_WORKERS_COUNT=0
      - OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS=true
      - N8N_RUNNERS_ENABLED=true
      - EXECUTIONS_CONCURRENCY_MAX=1
      # Authentication
      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE:-true}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      # Webhook and execution settings
      - WEBHOOK_URL=${WEBHOOK_URL:-}
      - EXECUTIONS_DATA_PRUNE=${EXECUTIONS_DATA_PRUNE:-true}
      - EXECUTIONS_DATA_MAX_AGE=${EXECUTIONS_DATA_MAX_AGE:-720}
      - EXECUTIONS_DATA_PRUNE_MAX_COUNT=${EXECUTIONS_DATA_PRUNE_MAX_COUNT:-50000}
      - N8N_DEFAULT_BINARY_DATA_MODE=${N8N_DEFAULT_BINARY_DATA_MODE:-filesystem}
      - N8N_LOG_LEVEL=info

  n8n-worker:
    # Static IP: ${IP_PREFIX}.7 - Worker instance for workflow execution
    image: docker.n8n.io/n8nio/n8n
    restart: always
    command: ["worker", "--concurrency=1"]
    networks:
      custom_network:
        ipv4_address: ${IP_PREFIX}.7
    volumes:
      - n8n_data:/home/node/.n8n
      - ./ssh:/home/node/.ssh
    depends_on:
      postgresdb:
        condition: service_healthy
      redis:
        condition: service_healthy
      n8n-main:
        condition: service_started
    environment:
      - TZ=Asia/Ho_Chi_Minh
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE:-Asia/Ho_Chi_Minh}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      # Database configuration
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgresdb
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      # Redis configuration for worker
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - QUEUE_BULL_REDIS_PASSWORD=${REDIS_PASSWORD}
      - QUEUE_BULL_REDIS_DB=${REDIS_DB:-0}
      # Worker instance configuration
      - EXECUTIONS_MODE=queue
      - N8N_DEFAULT_BINARY_DATA_MODE=${N8N_DEFAULT_BINARY_DATA_MODE:-filesystem}
      - N8N_LOG_LEVEL=info
      - N8N_RUNNERS_ENABLED=true
      - N8N_CONCURRENCY=1

  pfm_excel_api:
    # Static IP: ${IP_PREFIX}.2
    build:
      context: ./src
      dockerfile: ExcelApi/Dockerfile
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT:-Development}
      - ASPNETCORE_URLS=${ASPNETCORE_URLS:-http://+:80}
      - TZ=${TZ:-Asia/Ho_Chi_Minh}
    ports:
      - "${EXCEL_API_HTTP_PORT}:80"
      - "${EXCEL_API_HTTPS_PORT}:443"
    networks:
      custom_network:
        ipv4_address: ${IP_PREFIX}.2

# Custom bridge network with static IPs
# Last edited: 2024-05-18
networks:
  custom_network:
    driver: bridge
    ipam:
      config:
        - subnet: ${IP_PREFIX}.0/24
          gateway: ${IP_PREFIX}.1

volumes:
  postgres_data:
  n8n_data:
  redis_data:
